diff --git a/nbase/snprintf.c b/nbase/snprintf.c
index 27b7818..aa26391 100644
--- a/nbase/snprintf.c
+++ b/nbase/snprintf.c
@@ -609,31 +609,3 @@ asnprintf (char **ret, size_t max_sz, const char *format, ...)
   return val;
 }
 #endif
-
-
-
-#ifndef HAVE_VSNPRINTF
-int
-vsnprintf (char *str, size_t sz, const char *format, va_list args)
-{
-  struct state state;
-  int ret;
-  unsigned char *ustr = (unsigned char *)str;
-
-  state.max_sz = 0;
-  state.sz     = sz;
-  state.str    = ustr;
-  state.s      = ustr;
-  state.theend = ustr + sz - 1;
-  state.append_char = sn_append_char;
-  state.reserve     = sn_reserve;
-
-  ret = xyzprintf (&state, format, args);
-  *state.s = '\0';
-  if (ret)
-    return sz;
-  else
-    return state.s - state.str;
-}
-#endif
-
diff --git a/opensshlib/bsd-snprintf.c b/opensshlib/bsd-snprintf.c
index 23a6359..699eca1 100644
--- a/opensshlib/bsd-snprintf.c
+++ b/opensshlib/bsd-snprintf.c
@@ -869,24 +869,3 @@ fmtfp (char *buffer, size_t *currlen, size_t maxlen,
 }
 #endif /* !defined(HAVE_SNPRINTF) || !defined(HAVE_VSNPRINTF) */
 
-#if !defined(HAVE_VSNPRINTF)
-int
-vsnprintf (char *str, size_t count, const char *fmt, va_list args)
-{
-	return dopr(str, count, fmt, args);
-}
-#endif
-
-#if !defined(HAVE_SNPRINTF)
-int
-snprintf(char *str, size_t count, SNPRINTF_CONST char *fmt, ...)
-{
-	size_t ret;
-	va_list ap;
-
-	va_start(ap, fmt);
-	ret = vsnprintf(str, count, fmt, ap);
-	va_end(ap);
-	return ret;
-}
-#endif
diff --git a/opensshlib/cipher.c b/opensshlib/cipher.c
index feb6828..24d1e0a 100644
--- a/opensshlib/cipher.c
+++ b/opensshlib/cipher.c
@@ -363,7 +363,6 @@ cipher_init(struct sshcipher_ctx *cc, const struct sshcipher *cipher,
 			goto bad;
 		}
 		ret = EVP_Cipher(&cc->evp, discard, junk, cipher->discard_len);
-		explicit_bzero(discard, cipher->discard_len);
 		free(junk);
 		free(discard);
 		if (ret != 1) {
@@ -469,11 +468,9 @@ cipher_cleanup(struct sshcipher_ctx *cc)
 	if (cc == NULL || cc->cipher == NULL)
 		return 0;
 	if ((cc->cipher->flags & CFLAG_CHACHAPOLY) != 0)
-		explicit_bzero(&cc->cp_ctx, sizeof(cc->cp_ctx));
-	else if ((cc->cipher->flags & CFLAG_AESCTR) != 0)
-		explicit_bzero(&cc->ac_ctx, sizeof(cc->ac_ctx));
+	if ((cc->cipher->flags & CFLAG_AESCTR) != 0)
 #ifdef WITH_OPENSSL
-	else if (EVP_CIPHER_CTX_cleanup(&cc->evp) == 0)
+        if (EVP_CIPHER_CTX_cleanup(&cc->evp) == 0)
 		return SSH_ERR_LIBCRYPTO_ERROR;
 #endif
 	return 0;
@@ -497,7 +494,6 @@ cipher_set_key_string(struct sshcipher_ctx *cc, const struct sshcipher *cipher,
 
 	r = cipher_init(cc, cipher, digest, 16, NULL, 0, do_encrypt);
  out:
-	explicit_bzero(digest, sizeof(digest));
 	return r;
 }
 
diff --git a/opensshlib/explicit_bzero.c b/opensshlib/explicit_bzero.c
index 52f5374..7036169 100644
--- a/opensshlib/explicit_bzero.c
+++ b/opensshlib/explicit_bzero.c
@@ -1,5 +1,3 @@
-/* OPENBSD ORIGINAL: lib/libc/string/explicit_bzero.c */
-/*	$OpenBSD: explicit_bzero.c,v 1.1 2014/01/22 21:06:45 tedu Exp $ */
 /*
  * Public domain.
  * Written by Ted Unangst
@@ -8,7 +6,6 @@
 #include "includes.h"
 
 /*
- * explicit_bzero - don't let the compiler optimize away bzero
  */
 
 #ifndef HAVE_EXPLICIT_BZERO
@@ -16,7 +13,6 @@
 #ifdef HAVE_MEMSET_S
 
 void
-explicit_bzero(void *p, size_t n)
 {
 	(void)memset_s(p, n, 0, n);
 }
@@ -27,21 +23,6 @@ explicit_bzero(void *p, size_t n)
  * Indirect bzero through a volatile pointer to hopefully avoid
  * dead-store optimisation eliminating the call.
  */
-#ifndef WIN32
-static void (* volatile ssh_bzero)(void *, size_t) = bzero;
-
-void
-explicit_bzero(void *p, size_t n)
-{
-	ssh_bzero(p, n);
-}
-#else 
-void
-explicit_bzero(void *p, size_t n)
-{
-	(void)memset(p, 0, n);
-}
-#endif // WIN32
 
 #endif /* HAVE_MEMSET_S */
 
diff --git a/opensshlib/openbsd-compat.h b/opensshlib/openbsd-compat.h
index 86072a0..c2cf759 100644
--- a/opensshlib/openbsd-compat.h
+++ b/opensshlib/openbsd-compat.h
@@ -237,7 +237,7 @@ long long strtonum(const char *, long long, long long, const char **);
 #endif
 
 /* multibyte character support */
-#ifndef HAVE_MBLEN
+#ifndef __ANDROID__ 
 # define mblen(x, y)	(1)
 #endif
 
@@ -245,14 +245,6 @@ long long strtonum(const char *, long long, long long, const char **);
 # include <stdarg.h>
 #endif
 
-#ifndef HAVE_VASPRINTF
-int vasprintf(char **, const char *, va_list);
-#endif
-
-#ifndef HAVE_VSNPRINTF
-int vsnprintf(char *, size_t, const char *, va_list);
-#endif
-
 #ifndef HAVE_USER_FROM_UID
 char *user_from_uid(uid_t, int);
 #endif
