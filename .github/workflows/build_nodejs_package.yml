name: Build Node.js package

on:
  workflow_dispatch:

jobs:
  node-runtime-builder:
    runs-on: ubuntu-latest
    container:
      image: dockitava/package-builder:latest
      options: --user root
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Debug
        run: |
          echo Hello
          whoami
          hostname
          ls -al /github/workspace/
      - name: Build package
        run: |
          # openssl nodejs
          cd /github/workspace/termux-packages
          pwd
          hostname
          ls -al
          ./build-package.sh bc

      - name: Unpack Node.js & rename
        run: |
          mkdir -p /github/workspace/termux-packages/_out/node
          cd /github/workspace/termux-packages/_out
          cp -f /github/workspace/termux-packages/output/bc* ./
          # TODO rename to node
          ar x ./bc_1.07.1-1_aarch64.deb data.tar.xz
          unxz -v data.tar.xz
          tar xvf data.tar
          # TODO rename bc to node
          cp -rf ./data/data/com.termux/files/usr/bin/bc ./node/libnodeexe.so
          echo == NODEOUT
          ls -al ./node

      - name: Copy Node.js runtime deps
        run: |
          mkdir -p /github/workspace/termux-packages/_out/libs
          cd /github/workspace/termux-packages/_out
          cp -rf /data/data/com.termux/files/usr/lib/libssl* ./libs
          cp -rf /data/data/com.termux/files/usr/lib/libcrypt* ./libs
          rm -f ./libs/*.a
          cp -f /data/data/com.termux/files/usr/lib/libc++_shared.so ./libs
          echo == NODELIBSOUT
          ls -al ./libs
          cd /github/workspace/termux-packages/_out/libs
          zip -9 libs *
          ls -al

      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          files: home/builder/termux-packages/_out/node/libnodeexe.so
